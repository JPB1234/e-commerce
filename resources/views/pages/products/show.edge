@layouts.app()
<div x-data="productDetails" class="container mx-auto py-8 px-4">
  <!-- Card Principal -->
  <div class="max-w-3xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
    <!-- Imagem do Produto -->
    <div class="relative bg-gray-200">
      <!-- Exibição da Imagem -->
      <img 
        :src="newImage ? URL.createObjectURL(newImage) : '{{ product.imageUrl || '/images/default-image.jpg' }}'" 
        alt="{{ product.name }}" 
        class="w-full h-96 object-cover group-hover:scale-105 transition-transform duration-300"
      >
      <span 
        class="absolute top-4 left-4 bg-blue-500 text-white text-lg px-4 py-2 rounded-full shadow-md font-semibold"
        x-text="'Categoria: ' + product.category.name"
      ></span>
    </div>

    <!-- Botão Voltar -->
    <div class="p-4">
      <a 
        href="/products/index" 
        class="inline-block bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
      >
        ← Voltar para Produtos
      </a>
    </div>

    <!-- Informações do Produto -->
    <div class="p-6 space-y-4">
      <h1 class="text-4xl font-bold text-gray-800" x-text="product.name"></h1>
      <p class="text-gray-600 leading-relaxed" x-text="product.description"></p>
      <div class="flex items-center justify-between">
        <span class="text-3xl font-semibold text-green-600" x-text="'$' + product.price"></span>  

        @if(auth.user && auth.user.admin)
          <button 
            @click="isEditing = true"
            class="bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors shadow-md"
          >
            Editar Produto
          </button>
        @endif

        <!-- Modal de Edição -->
        <div 
          x-show="isEditing"
          class="fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center"
          style="display: none;"
        >
          <div class="bg-white p-6 rounded-lg shadow-lg space-y-4 max-w-sm w-full">
            <h2 class="text-2xl font-bold text-gray-800">Editar Produto</h2>
        
            <div>
              <label class="block text-sm font-medium text-gray-700">Nome</label>
              <input 
                type="text" 
                x-model="product.name" 
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              >
            </div>
        
            <div>
              <label class="block text-sm font-medium text-gray-700">Descrição</label>
              <textarea 
                x-model="product.description" 
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              ></textarea>
            </div>
        
            <div>
              <label class="block text-sm font-medium text-gray-700">Preço</label>
              <input 
                type="number" 
                x-model="product.price" 
                step="0.01" 
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              >
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Quantidade no estoque</label>
              <input 
                type="number" 
                x-model="product.stock" 
                step="0" 
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              >
            </div>
        
            <div class="mt-4">
              <label for="category_id" class="block text-gray-700 font-medium mb-1">Categoria</label>
              <select
                x-model="product.category.id"
                name="category_id"
                id="category_id"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white text-gray-700 appearance-none"
              >
                <option value="" disabled selected>Selecione uma Categoria</option>
                @each(category in categories)
                <option value="{{ category.id }}">{{ category.name }}</option>
                @endeach
              </select>
            </div>

            <!-- Campo de alteração da imagem -->
            <div>
              <label class="block text-sm font-medium text-gray-700">Imagem do Produto</label>
              <input 
                type="file" 
                @change="handleImageChange($event)"
                class="mt-1 block w-full text-gray-700 file:border file:bg-gray-200 file:py-2 file:px-4 file:rounded-lg"
              >
              <p class="text-sm text-gray-500 mt-2">Escolha uma nova imagem para o produto (opcional).</p>
            </div>
        
            <div class="flex justify-end space-x-2">
              <button 
                @click="isEditing = false"
                class="px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400 transition-colors"
              >
                Cancelar
              </button>
              <button 
                @click="updateProductOnServer()"
                class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
              >
                Salvar
              </button>
            </div>
          </div>
        </div>

        <!-- Formulário de Adicionar ao Carrinho -->
        <form method="POST" action="{{ route('cart.store') }}">
          <input type="hidden" name="product_id" value="{{ product.id }}">
          <input type="number" min= "0" name="quantity" value="1" class="w-16 border p-2">
          <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-all">
            Adicionar ao Carrinho
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('productDetails', () => ({
      product: {
        id: {{ product.id }},
        name: "{{ product.name }}",
        price: {{ product.price }},
        stock: {{ product.stock }},
        description: "{{ product.description }}",
        category: {
          id: "{{ product.category.id }}",
          name: "{{ product.category.name }}",
        },
      },
      isEditing: false,
      newImage: null,

      // Função para adicionar o produto ao carrinho
      async addToCart() {
        // Envia o formulário com os dados do produto
        const form = document.querySelector('form');
        form.submit();
      },

      // Função de atualização do produto no servidor
      async updateProductOnServer() {
        const formData = new FormData();
        formData.append('name', this.product.name);
        formData.append('price', this.product.price);
        formData.append('stock', this.product.stock);
        formData.append('description', this.product.description);
        formData.append('category_id', this.product.category.id);

        if (this.newImage) {
          formData.append('image', this.newImage);
        }

        try {
          const response = await fetch(`/products/${this.product.id}`, {
            method: 'PATCH',
            body: formData,
          });

          if (!response.ok) {
            throw new Error('Falha ao atualizar o produto');
          }

          const updatedProduct = await response.json();
          this.product = updatedProduct; // Atualiza os dados localmente após salvar
          this.isEditing = false;
        } catch (error) {
          console.error('Erro ao atualizar produto:', error);
        }
      },

      // Função para tratar a nova imagem
      handleImageChange(event) {
        const file = event.target.files[0];
        if (file) {
          this.newImage = file;
        }
      }
    }));
  });
</script>
@end
